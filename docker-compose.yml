version: "3.8"

networks:
  elastic:
    driver: bridge
volumes:
  certs:
  es01_data:
  kibana_data:

services:
  setup:
    container_name: setup
    build:
      context: setup/
      args:
        STACK_VERSION: $STACK_VERSION
        ES_PASSWORD: $ES_PASSWORD
        KIBANA_PASSWORD: $KIBANA_PASSWORD
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - ./setup/instances.yml:/usr/share/elasticsearch/instances.yml
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  es01:
    container_name: es01
    depends_on:
      setup:
        condition: service_healthy
    build:
      context: elasticsearch/
      args:
        STACK_VERSION: $STACK_VERSION
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - es01_data:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - elastic
    ports:
      - 9200:9200
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    container_name: kibana
    depends_on:
      es01:
        condition: service_healthy
    build:
      context: kibana/
      args:
        STACK_VERSION: $STACK_VERSION
    volumes:
      - kibana_data:/usr/share/kibana/data
      - certs:/usr/share/kibana/config/certs
    networks:
      - elastic
    ports:
      - 5601:5601
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'HTTP/1.1 200 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
# logstash:
#   container_name: logstash
#   build:
#     context: logstash/
#     args:
#       ELASTIC_VERSION: ${ELASTIC_VERSION}
#   volumes:
#     - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#     - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
#   ports:
#     - 5044:5044
#     - 50000:50000/tcp
#     - 50000:50000/udp
#     - 9600:9600
#   environment:
#     LS_JAVA_OPTS: -Xms256m -Xmx256m
#     LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
#   networks:
#     - elk
#   depends_on:
#     - elasticsearch
#   restart: unless-stopped
