version: "3.8"

networks:
  elastic:
volumes:
  certs:
  es01_logs:
  es01_data:
  kibana_data:
  logstash_data:

services:
  setup:
    container_name: setup
    build:
      context: setup/
      args:
        STACK_VERSION: $STACK_VERSION
        ELASTIC_PASSWORD: $ELASTIC_PASSWORD
        KIBANA_PASSWORD: $KIBANA_PASSWORD
        LOGSTASH_PASSWORD: $LOGSTASH_PASSWORD
        ES01_HOST: $ES01_HOST
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - ./setup/instances.yml:/usr/share/elasticsearch/instances.yml
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  es01:
    container_name: es01
    depends_on:
      setup:
        condition: service_healthy
    build:
      context: elasticsearch/
      args:
        STACK_VERSION: $STACK_VERSION
        ELASTIC_PASSWORD: $ELASTIC_PASSWORD
        CLUSTER_NAME: $CLUSTER_NAME
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - es01_data:/usr/share/elasticsearch/data
      - es01_logs:/usr/share/elasticsearch/logs
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - elastic
    ports:
      - $ES01_PORT:9200
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s $ES01_HOST/_cluster/health -u elastic:$ELASTIC_PASSWORD --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt  | grep -q '\"status\":\"green\"'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    container_name: kibana
    depends_on:
      es01:
        condition: service_healthy
    build:
      context: kibana/
      args:
        STACK_VERSION: $STACK_VERSION
        KIBANA_PASSWORD: $KIBANA_PASSWORD
        ENCRYPTION_KEY: $ENCRYPTION_KEY
        ES01_HOST: $ES01_HOST
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibana_data:/usr/share/kibana/data
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elastic
    ports:
      - $KIBANA_PORT:5601
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s https://kibana:5601 -u elastic:$ELASTIC_PASSWORD --cacert /usr/share/kibana/config/certs/ca/ca.crt  | grep -q 'HTTP/1.1 200 OK'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    container_name: logstash
    depends_on:
      es01:
        condition: service_healthy
      kibana:
        condition: service_healthy
    build:
      context: logstash/
      args:
        ES01_HOST: $ES01_HOST
        STACK_VERSION: $STACK_VERSION
        LOGSTASH_PASSWORD: $LOGSTASH_PASSWORD
    volumes:
      - certs:/usr/share/logstash/config/certs
      - logstash_data:/usr/share/logstash/data
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      # test
      - ./mock:/usr/share/logstash/mock
    networks:
      - elastic
    #restart: unless-stopped
