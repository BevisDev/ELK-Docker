version: "3.8"

networks:
  elastic:
volumes:
  certs:
  es01_logs:
  es01_data:
  kibana_data:
  logstash_data:

services:
  setup:
    container_name: setup
    image: docker.elastic.co/elasticsearch/elasticsearch:$STACK_VERSION
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - ./setup/instances.yml:/usr/share/elasticsearch/instances.yml:ro
      - ./setup/setup.sh:/usr/share/elasticsearch/setup.sh:ro
    networks:
      - elastic
    environment:
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - KIBANA_PASSWORD=$KIBANA_PASSWORD
      - ES01_HOST=$ES01_HOST
    user: "0"
    command: bash -c ./setup.sh
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  es01:
    container_name: es01
    depends_on:
      setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:$STACK_VERSION
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - es01_data:/usr/share/elasticsearch/data
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - elastic
    ports:
      - $ES01_PORT:9200
    restart: unless-stopped
    environment:
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - CLUSTER_NAME=$CLUSTER_NAME
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'curl -s $ES01_HOST/_cluster/health -u elastic:$ELASTIC_PASSWORD --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt  | grep -q ''"status":"green"''',
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    container_name: kibana
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:$STACK_VERSION
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibana_data:/usr/share/kibana/data
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elastic
    ports:
      - $KIBANA_PORT:5601
    restart: unless-stopped
    environment:
      - KIBANA_PASSWORD=$KIBANA_PASSWORD
      - ENCRYPTION_KEY=$ENCRYPTION_KEY
      - ES01_HOST=$ES01_HOST
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I https://kibana:5601 --cacert /usr/share/kibana/config/certs/ca/ca.crt | grep -q 'HTTP/1.1 200 OK'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    container_name: logstash
    depends_on:
      es01:
        condition: service_healthy
      kibana:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash:$STACK_VERSION
    volumes:
      - certs:/usr/share/logstash/config/certs
      - logstash_data:/usr/share/logstash/data
      - ./config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      # ingest data
      - ./ingest_data:/usr/share/logstash/ingest_data
    networks:
      - elastic
    environment:
      - ES01_HOST=$ES01_HOST
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://logstash:9600/_node/stats | grep -q '^{}'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
